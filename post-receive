#!/bin/sh
# Checkout source tree to the pushed commit when pushing into the branch
# defined in TRIGGER_BRANCH (default = compile).
#
# This is a Git server-side post-receive hook.
#
# Git Hooks in https://github.com/djboni/git-hooks

# Name of the branch that triggers the checkout in the push.
TRIGGER_BRANCH=compile

# Name of the branch used to checkout the pushed commit.
# This branch cannot not be pushed.
CHECKOUT_BRANCH=last_compile

# Read stdin (last top, current top, branch) and split them
read DATA
LASTTOP=$(echo "$DATA" | cut -d' ' -f 1)
CURRTOP=$(echo "$DATA" | cut -d' ' -f 2)
BRANCH=$(echo "$DATA" | cut -d' ' -f 3)

if [ "$BRANCH" = "refs/heads/$TRIGGER_BRANCH" ]; then

  # Update Git directory variable and go to souce tree
  # Expecting to be in directory SOURCE_TREE/.git
  GIT_DIR="$PWD"
  cd ..
  
  echo "################################################################"
  echo "Checking-out commit pushed to '$BRANCH': "
  #git show --abbrev-commit --oneline --no-patch "$CURRTOP"
  
  # Stash changes (just to be safe not to lose anything important)
  # git stash push --include-untracked -m "Automatic checkout on branch '$BRANCH'"
  git stash save --include-untracked "Automatic checkout on branch '$BRANCH'"

  # Reset source tree to the pushed commit
  git checkout --quiet -B "$CHECKOUT_BRANCH"
  git reset --hard "$CURRTOP"
  git clean --quiet -d --force
  #git status --branch --short
  
  #echo "Branch '$CHECKOUT_BRANCH' reset to '$BRANCH'"
  #echo "  commit '$CURRTOP'."
  
  echo "################################################################"

  # Compilation trigger
  # ...

fi
